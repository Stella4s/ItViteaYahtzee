<Window x:Class="ItViteaYahtzee.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ItViteaYahtzee"
        mc:Ignorable="d"
        Title="Yahtzee" Height="450" Width="800">

    <Window.DataContext>
        <local:VM_RollsRules/>
    </Window.DataContext>

    <Window.Resources>

        <Style x:Key="styleRowBtn" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="WhiteSmoke"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        
        <ControlTemplate x:Key="ctrlTempRowBtn" TargetType="{x:Type Button}">
            <Grid>
                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>
        </ControlTemplate>

        <!--Test 01-->
        <DataTemplate DataType="{x:Type local:ScoreBar}">
            <Border BorderBrush="Black" BorderThickness="0,0.5,0,0" UseLayoutRounding="False" SnapsToDevicePixels="True">

                <Button x:Name="rowBtn" 
                              Style="{DynamicResource styleRowBtn}" 
                              HorizontalContentAlignment="Stretch"  VerticalContentAlignment="Stretch"
                              IsEnabled="False"
                              Command="{Binding BtnNotePointsCmd, Mode=OneWay}" CommandParameter="{Binding ScoreGrid/Index}"
                              >

                    <Grid x:Name="gridBar" VerticalAlignment="Center">
                        <Grid.Resources>
                            <Style TargetType="{x:Type CheckBox}">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                            </Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Padding" Value="4,0"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" x:Name="tName" Text="{Binding Name}"/>
                        <TextBlock Grid.Column="1" x:Name="tPoints" Text="{Binding Points}" HorizontalAlignment="Center"/>
                        <CheckBox Grid.Column="2" IsChecked="{Binding IsValid}"/>
                        <CheckBox Grid.Column="3" IsChecked="{Binding IsUsed}"/>
                        <CheckBox Grid.Column="4" IsChecked="{Binding AllowClick}"/>
                    </Grid>
                </Button>
            </Border>

            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsValid}" Value="True">
                    <Setter TargetName="tPoints" Property="Foreground"  Value="Red"/>
                    <Setter TargetName="rowBtn" Property="IsEnabled" Value="True"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsUsed}" Value="True">
                    <Setter TargetName="tPoints" Property="Foreground"  Value="Black"/>
                    <Setter TargetName="tName" Property="TextDecorations"  Value="StrikeThrough"/>
                    <Setter TargetName="rowBtn" Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding AllowClick}" Value="False">
                    <Setter TargetName="rowBtn" Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <!--If points have been noted for this round. Disable all buttons so user can't re-use the same roll for points.-->
                <DataTrigger Binding="{Binding NotedPoints}" Value="True">
                    <Setter TargetName="rowBtn" Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <!--<ControlTemplate x:Key="ctrlTempScore" TargetType="ItemsControl">
            
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
            
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">

                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>-->


    </Window.Resources>

    <Grid>
        <Grid Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="0.5*"/>
            </Grid.ColumnDefinitions>


            <Grid Background="WhiteSmoke">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ItemsControl Name="iCtrlDice" Grid.Row="1" ItemsSource="{Binding DiceArr}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Rows="1"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock FontSize="20" Text="{Binding Number}" HorizontalAlignment="Center"/>
                                <ToggleButton Content="Hold" IsChecked="{Binding IsHeld, Mode=TwoWay}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <StackPanel Grid.Row="0" Margin="5" Orientation="Horizontal">
                    <TextBlock  Text="Rolls: " FontSize="20" />
                    <TextBlock  Text="{Binding DiceRoll}" FontSize="20"/>
                </StackPanel>

                <Button Name="btnRoll" Grid.Row="2" Content="Roll" Width="150" Height="50" Margin="5" Command="{Binding GetDiceCmd}" />


            </Grid>


            <Border Grid.Column="1" BorderBrush="Black" BorderThickness="0.5,0,0.5,0.5">

                <!-- Test 02. Clicking checkboxes doesn't update the hold button selection.
                <DataGrid Name="dGridScore" ItemsSource="{Binding ScoreGrid}" AutoGenerateColumns="False" 
                          CanUserReorderColumns="False" CanUserSortColumns="False"  
                          HeadersVisibility="Column" VerticalContentAlignment="Center">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}"/>
                        <DataGridTextColumn Header="Points" Binding="{Binding Points}"/>
                        <DataGridCheckBoxColumn Header="Valid" Binding="{Binding IsValid}"/>
                        <DataGridCheckBoxColumn Header="Used" Binding="{Binding IsUsed}"/>
                        <DataGridCheckBoxColumn Header="Click" Binding="{Binding AllowClick}"/>
                    </DataGrid.Columns>
                </DataGrid>-->

                <!-- For test 01.-->
                <ItemsControl ItemsSource="{Binding ScoreGrid}" Margin="0">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="1" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>


            </Border>

        </Grid>
    </Grid>
</Window>
